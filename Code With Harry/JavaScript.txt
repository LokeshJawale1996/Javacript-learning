Session 1)
What is Client Side VS Server Side?

In simple

Client side:front end(HTML,CSS,JS)
Server Side;Back end(PHP,Python)

Example:
suppose there are three users to the website
if any users searched for google.com then server provides
a webpage having html css and js logic
when client user get back response the logic is infront of that user

In such a way diffrent diffrent user request for sepcific things/pages
and server side reponse is received to that user from server

===========================================================================
emmet feature in Vs code
1) span#d1*34 
creats 34 span tag having same id d1

2) div.class1.class2*5  
it creates 5 div having both seperate classes class1 and class2

3)script:src
it will create script tag with including src attribute in it

===========================================================================
===========================================================================
Session 2
Console logs,errors,warining and more details

console.time("Your code Took"); 
console.log("hello console");
console.log(34 + 5);
console.log(34);
console.log(true);
console.log([23, 22, 1, 34]); //array printed
console.log({ name: "lokesh", age: "25" })//object details printed on console
console.table({ name: "lokesh", age: "25" }); //object details printed on tabular format on console
console.warn("this is warning"); //for warning
// console.clear();
console.timeEnd("Your code Took");
// console.assert(566 > 189, "age  > 189 is not possible");
console.error("this is an error"); // for showing an error on console

===========================================================================
===========================================================================
Session 3
/*Most common programming case types:
1.camel_Case
2.Kebab-case
3.snake_case
4.PascalCase
*/

/*
var	let	const
1)var
The scope of a var variable is functional scope.	
It can be updated and re-declared into the scope.

2)let
The scope of a let variable is block scope.
It can be updated but cannot be re-declared into the scope.	


3)const
The scope of a const variable is block scope.
It cannot be updated or re-declared into the scope.
*/

//Rules for creating JavaScipt variables
/*
1)Cannot start with numbers 
2)Can start with letter , _ or $
3)Are case sensitive
*/
===========================================================================
===========================================================================
Session 4
Data types

Data Types in JS
1) Primitive Data Types
Strings "lokesh"
numbers 45
Boolean true false
Null
undefined var name;//here name having no value stored so its value is undefined now
Symbol

2)Reference Data Types
Arrays
Object Literals
functions
Dates
===========================================================================
===========================================================================
Session 5
//type conversion

console.log("Welcome to tut5");
let myVar;
myVar = 45;
console.log(myVar, typeof myVar); //45 number

//conversion from number to string
let myVar1;
myVar1 = String(67);
// console.log(myVar1, typeof myVar1); //67 string
//=======================================
//conversion from boolean to string
let booleanVar = String(true);
// console.log(booleanVar, typeof booleanVar);//true string

//=======================================
//conversion of Date into string
let date = String(new Date());
// console.log(date, typeof date);
//=======================================
//conversion of arr into string
let arr = String([1, 2, 3, 4, 5]);
// console.log(arr.length, typeof arr);//9 string

//=======================================
//conversion of number into string using toString() method
//we can convert boolean,Date,Arr in string using toString Method.
let i = 6;
// console.log(i.toString(), typeof i); //6 number

let arr1 = [1, 2, 3, 4, 4, 6];
// console.log(arr1.toString());
// //1,2,3,4,5,6,
//=======================================
//conversion of string into number
let stri = Number("1234");
stri = Number("12d34"); //NaN
// console.log(stri, typeof stri); //NaN number
//=================================
//conversion of boolean to number
let stri1 = Number(false);
let stri2 = Number(true);
// console.log(stri1, stri2, typeof stri1, typeof stri2); // 0 1 number number
//=================================
//conversion of array into number is not possible
let arr2 = Number([12, 23, 45, 56]);
// console.log(arr2, typeof arr2); //NaN number

//=================================
//conversion of string into number using parseInt() method & parseFloat() method

let number = parseInt("23.067");
// console.log(number, typeof number);//23 number

let number1 = parseFloat("23.067");
// console.log(number1, typeof number1); //23.067 number

//
// console.log(number1.toFixed(5), typeof number1); //23.06700 number

//============================================================================
//Type coercion

let myStr1 = "657";
let myNum1 = 34;
// console.log(myStr1 + myNum1);//65734

let myStr2 = Number("657");
let myNum2 = 34;
// console.log(myStr2 + myNum2); //691


//====================================================================================
//===================================================================================

Session 6
String methods,properties and template literals

//String:Properties,Methods & Template Literals
console.log("we are at tut6");

const myName = "lokesh";
const greeting = "Good Morning";
console.log(greeting + " " + myName); //Good Morning lokesh

//=============================
let html;
html = "<h1>This is heading</h1>" + "<p>This is my para</p>";
html = html.concat(" This", " str");
//concat() is used for concatinating strings
// console.log(html);
// console.log(html.length); //55
// console.log(html.toLocaleLowerCase());
// console.log(html.toUpperCase());
// console.log(html[1]);//h
// console.log(html.indexOf("This")); //4
// console.log(html.indexOf("jjsjh")); //-1-1
// console.log(html.lastIndexOf("<")); //42
// console.log(html.charAt(4)); //T
// console.log(html.endsWith("str")); //true
// console.log(html.includes("ghhh")); //false
// console.log(html.includes("This")); //true
// console.log(html.substring(1, 3)); //h1
// console.log(html.slice(0, 4)); //<h1>
// console.log(html.split(""));//

// console.log(html.replace("This", "it")); //replace first occurences;
// //if we want to change all occurences
// //then use replceAll()

//==============================
//Template Literals(ES6 feature)

let fruit1 = "Orange";
let fruit2 = "Apple";

let myHtml = `Hello ${myName}
              <h1>This is my heading</h1>
              <p>Do You like ${fruit1} and ${fruit2}
`;
document.body.innerHTML = myHtml;

===========================================================================
===========================================================================
Session 7 
Arrays and Object

//Arrays and objects

console.log("We are in tut7.js and let's discuss about arrays");

let marks = [67, 78, 89, 65, 78, 54];
const fruits = ["Orange", "Apple", "Pineapple"];
const mixed = ["str", 89, [3, 5]];

const arr = new Array(23, 123, 21, "Orange");
// console.log(marks);
// console.log(arr);
// console.log(mixed);
// console.log(fruits[0]);
// console.log(arr.length);
// console.log(Array.isArray(arr)); //checking array is not and returning true or false according to it
arr[0] = "Lucky";
// console.log(arr);
let arrelement = arr[0];
// console.log("element :" + arrelement); //element :lucky

let value = marks.indexOf(54);
// console.log(value); //4

//mutuating or modifying arrays
// marks.push(57); //pushes  element in array after last index
// marks.unshift(66); //added element in array atv 0th index
//marks.shift();//removes first 0th index element from array
// marks.splice(1, 2);
// marks.reverse(); //array element reversed

let marks2 = [45, 79, 84, 96, 48];
marks = marks.concat(marks2); //concatinating two arrays
// console.log(marks);

//Objects

let myobj = {
  "first name": "Lokesh",
  BusinessName: "Jawale papd",
  isActive: true,
  marks: [1, 5, 3, 6],
};

// console.log(myobj);
// console.log(myobj["first name"]); //Lokesh
// console.log(myobj.BusinessName); //Jawale papd


===========================================================================
===========================================================================
Session 8
If else switch statement
console.log("This is Tutorial 8");

const age = 19;
const doesDrive = true;
// const vari = 25;

//== only checks value
//=== check value as well as type of value
//!= if value is not matching
//!== if value and type of value is not matching

// if (age != 19) {
//   console.log("Age is not 19");
// } else if (age !== 65) {
//   console.log("Age is 65");
// } else {
//   console.log("Age is not available");
// }

// if (typeof vari !== "undefined") {
//   console.log("Vari is definded");
// } else {
//   console.log("vari is not defined");
// }

// if (doesDrive && age > 18) {
//   console.log("You can drive");
// } else {
//   console.log("You does not drive");
// }

// console.log(age == 45 ? "Age is 45" : "Age is not 45");//Age is not 45

//switch statement is like below
switch (age) {
  case 18:
    console.log("You are 18");
    break;
  case 28:
    console.log("you are 28");
    break;
  case 38:
    console.log("you are 38");
    break;

  default:
    console.log("You are non age");
    break;
}
//====================================================================================
//===================================================================================
Session 9
//loops and function

//loops and function

console.log("We are in tutorial 9");

// console.log(1);
// console.log(2);
// console.log(3);

//General  Loops:for,while,do-while

// let a = 25;
// a += 1;
// a++;
// console.log(a); //27

//for loop below
//i=0 (initialization)
//i < 10 (condition)
//i++ (updation)
for (let i = 0; i <= 10; i++) {
  console.log(i);
}

//while loop
// j = 0;
// while (j <= 10) {
//   console.log(j);
//   j++;
// }

//do while loop
// let k = 0;
// do {
//   if (k === 5) {
//     k += 1;
//     continue;
//   }
//   console.log(k + 1);

//   k += 1;
// } while (k < 10);

let arr = [1, 2, 3, 4, 5, 6];
// for (let i = 0; i < arr.length; i++) {
//   const element = arr[i];
//   console.log(element);
// }

// arr.forEach(function (element) {
//   console.log(element);
// });

//functions
let obj = {
  name: "lokesh",
  age: 25,
  type: "good programmer",
  OS: "windows",
};

// for (let key in obj) {
//   console.log(`the ${key} of object is ${obj[key]}`);
// }

console.log("done");
//====================================================================================
//===================================================================================