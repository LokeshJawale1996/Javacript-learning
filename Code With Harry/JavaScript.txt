Session 1)
What is Client Side VS Server Side?

In simple

Client side:front end(HTML,CSS,JS)
Server Side;Back end(PHP,Python)

Example:
suppose there are three users to the website
if any users searched for google.com then server provides
a webpage having html css and js logic
when client user get back response the logic is infront of that user

In such a way diffrent diffrent user request for sepcific things/pages
and server side reponse is received to that user from server

===========================================================================
emmet feature in Vs code
1) span#d1*34 
creats 34 span tag having same id d1

2) div.class1.class2*5  
it creates 5 div having both seperate classes class1 and class2

3)script:src
it will create script tag with including src attribute in it

===========================================================================
===========================================================================
Session 2
Console logs,errors,warining and more details

console.time("Your code Took"); 
console.log("hello console");
console.log(34 + 5);
console.log(34);
console.log(true);
console.log([23, 22, 1, 34]); //array printed
console.log({ name: "lokesh", age: "25" })//object details printed on console
console.table({ name: "lokesh", age: "25" }); //object details printed on tabular format on console
console.warn("this is warning"); //for warning
// console.clear();
console.timeEnd("Your code Took");
// console.assert(566 > 189, "age  > 189 is not possible");
console.error("this is an error"); // for showing an error on console

===========================================================================
===========================================================================
Session 3
/*Most common programming case types:
1.camel_Case
2.Kebab-case
3.snake_case
4.PascalCase
*/

/*
var	let	const
1)var
The scope of a var variable is functional scope.	
It can be updated and re-declared into the scope.

2)let
The scope of a let variable is block scope.
It can be updated but cannot be re-declared into the scope.	


3)const
The scope of a const variable is block scope.
It cannot be updated or re-declared into the scope.
*/

//Rules for creating JavaScipt variables
/*
1)Cannot start with numbers 
2)Can start with letter , _ or $
3)Are case sensitive
*/
===========================================================================
===========================================================================
Session 4
Data types

Data Types in JS
1) Primitive Data Types
Strings "lokesh"
numbers 45
Boolean true false
Null
undefined var name;//here name having no value stored so its value is undefined now
Symbol

2)Reference Data Types
Arrays
Object Literals
functions
Dates
===========================================================================
===========================================================================
Session 5
//type conversion

console.log("Welcome to tut5");
let myVar;
myVar = 45;
console.log(myVar, typeof myVar); //45 number

//conversion from number to string
let myVar1;
myVar1 = String(67);
// console.log(myVar1, typeof myVar1); //67 string
//=======================================
//conversion from boolean to string
let booleanVar = String(true);
// console.log(booleanVar, typeof booleanVar);//true string

//=======================================
//conversion of Date into string
let date = String(new Date());
// console.log(date, typeof date);
//=======================================
//conversion of arr into string
let arr = String([1, 2, 3, 4, 5]);
// console.log(arr.length, typeof arr);//9 string

//=======================================
//conversion of number into string using toString() method
//we can convert boolean,Date,Arr in string using toString Method.
let i = 6;
// console.log(i.toString(), typeof i); //6 number

let arr1 = [1, 2, 3, 4, 4, 6];
// console.log(arr1.toString());
// //1,2,3,4,5,6,
//=======================================
//conversion of string into number
let stri = Number("1234");
stri = Number("12d34"); //NaN
// console.log(stri, typeof stri); //NaN number
//=================================
//conversion of boolean to number
let stri1 = Number(false);
let stri2 = Number(true);
// console.log(stri1, stri2, typeof stri1, typeof stri2); // 0 1 number number
//=================================
//conversion of array into number is not possible
let arr2 = Number([12, 23, 45, 56]);
// console.log(arr2, typeof arr2); //NaN number

//=================================
//conversion of string into number using parseInt() method & parseFloat() method

let number = parseInt("23.067");
// console.log(number, typeof number);//23 number

let number1 = parseFloat("23.067");
// console.log(number1, typeof number1); //23.067 number

//
// console.log(number1.toFixed(5), typeof number1); //23.06700 number

//============================================================================
//Type coercion

let myStr1 = "657";
let myNum1 = 34;
// console.log(myStr1 + myNum1);//65734

let myStr2 = Number("657");
let myNum2 = 34;
// console.log(myStr2 + myNum2); //691


//====================================================================================
//===================================================================================

Session 6